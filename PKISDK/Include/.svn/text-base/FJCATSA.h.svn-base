#ifndef __FJCATSA_H
#define __FJCATSA_H

/*********************************************************************************************
	根据错误号取错误信息
	nErrCode         - [输入参数] 错误码
	Return: 返回错误信息串std::string 
*********************************************************************************************/
std::string XA_GetErrorString( int nErrCode );

/*********************************************************************************************
	根据原文数据获取对应SM3摘要数据
	SrcData         - [输入参数] 原文数据
	SrcDataLen      - [输入参数] 原文数据长度
	DigestData      - [输出参数] 摘要数据(hex string)
*********************************************************************************************/
void XA_GetSM3Digest( const unsigned char* SrcData, long SrcDataLen, char* DigestData);

/*********************************************************************************************
	签发时间戳
	digest           - [输入参数] 所需要签名数据的数据摘要信息(hex string模式，例如摘要是0x010203..., 则digest则是string形式的010203...), digest的长度必须和摘要算法所需的长度一致，例如md5应该是32个char，sha1应该是40个char 
	algo             - [输入参数] 数据摘要算法(md5/sha1/sm3)。
	Url              - [输入参数] 时间戳服务器地址:端口。
	TSAResponse      - [输出参数] 时间戳响应――BASE64编码
	Return: 返回签发的结果,如:0代表成功. 4xx:代表失败 5xx:服务端异常错误。
*********************************************************************************************/
long XA_SignTimeStamp(const char* digest, const char* algo, const char* Url, char* TSAResponse);

/*********************************************************************************************
	签发时间戳(返回完整时间戳)
	digest           - [输入参数] 所需要签名数据的数据摘要信息(hex string模式，例如摘要是0x010203..., 则digest则是string形式的010203...), digest的长度必须和摘要算法所需的长度一致，例如md5应该是32个char，sha1应该是40个char 
	algo             - [输入参数] 数据摘要算法(md5/sha1/sm3)。
	Url              - [输入参数] 时间戳服务器地址:端口。
	TSAResponse      - [输出参数] 时间戳响应――BASE64编码
	Return: 返回签发的结果,如:0代表成功. 4xx:代表失败 5xx:服务端异常错误。
*********************************************************************************************/
long XA_SignTimeStamp_Complete(const char* digest, const char* algo, const char* Url, char* TSAResponse);

/*********************************************************************************************
	验证时间戳
	TSAResponse      - [输入参数] 时间戳响应――BASE64编码
	digest           - [输入参数] 所需要签名数据的数据摘要信息(hex string模式，例如摘要是0x010203..., 则digest则是string形式的010203...), digest的长度必须和摘要算法所需的长度一致，例如md5应该是32个char，sha1应该是40个char 
	algo             - [输入参数] 数据摘要算法(md5/sha1/sm3)。
	Url              - [输入参数] 时间戳服务器地址:端口。
	Return: 返回验证的结果，如：0代表成功。4xx:代表失败 5xx:服务端异常错误。
*********************************************************************************************/
long XA_VerifyTimeStamp(const char* digest, const char* algo, const char* Url, const char* TSAResponse);




#endif